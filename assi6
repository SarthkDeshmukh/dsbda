import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
dataset = pd.read_csv('data6(1).csv')
dataset

dataset = pd.read_csv('data6(1).csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

print(X_train)

print(y_train)

print(X_test)

print(y_test)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

print(X_train)

print(X_test)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)
accuracy_score(y_test, y_pred)

plt.figure()
plot_confusion_matrix(cnf_matrix, classes=['Age','EstimatedSalary'],
                      title='Confusion matrix, without normalization')

tn, fp, fn, tp = confusion_matrix(y_test, y_pred).ravel()
print("True Negatives: ",tn)
print("False Positives: ",fp)
print("False Negatives: ",fn)
print("True Positives: ",tp)

Accuracy = (tn+tp)*100/(tp+tn+fp+fn) 
print("Accuracy {:0.2f}%:", format(Accuracy))
Accuracy {:0.2f}%: 90.0

Recall = tp/(tp+fn) 
print("Recall {:0.2f}",format(Recall))
Recall {:0.2f} 0.78125

Precision = tp/(tp+fp) 
print("Precision {:0.2f}",format(Precision))
